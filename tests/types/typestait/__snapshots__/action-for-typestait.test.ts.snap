// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`error: action for non existent stait 1`] = `
"error TS2344: Type '\\"stait2\\"' does not satisfy the constraint '\\"stait1\\"'.
"
`;

exports[`error: non existent action 1`] = `
"error TS2344: Type '\\"action2\\"' does not satisfy the constraint '\\"action1\\"'.
"
`;

exports[`type: args with context and with payload 1`] = `
"type args_with_context_and_with_payload =
  true
"
`;

exports[`type: args with context and without payload 1`] = `
"type args_with_context_and_without_payload =
  true
"
`;

exports[`type: args without context and with payload 1`] = `
"type args_without_context_and_with_payload =
  true
"
`;

exports[`type: args without context and without payload 1`] = `
"type args_without_context_and_without_payload =
  true
"
`;

exports[`type: simple recursive action depth 1 1`] = `
"type simple_recursive_action_depth_1 =
  () => {
    type: 'stait1'
    actions: {
      action1: any
    }
  }
"
`;

exports[`type: simple recursive action depth 2 1`] = `
"type simple_recursive_action_depth_2 =
  () => {
    type: 'stait1'
    actions: {
      action1: any
    }
  }
"
`;

exports[`type: simple recursive action depth 2 equals depth 1 1`] = `
"type simple_recursive_action_depth_2_equals_depth_1 =
  true
"
`;

exports[`type: with context and with payload 1`] = `
"type with_context_and_with_payload =
  (opts: {
    ctx: {
      data1: string
      data2: 123
    }
    payload: {
      data1: string
      data2: 123
    }
  }) => {
    type: 'stait1'
    context: {
      data1: string
      data2: 123
    }
    actions: {
      action1: any
    }
  }
"
`;

exports[`type: with context and without payload 1`] = `
"type with_context_and_without_payload =
  (opts: {
    ctx: {
      data1: string
      data2: 123
    }
  }) => {
    type: 'stait1'
    context: {
      data1: string
      data2: 123
    }
    actions: {
      action1: any
    }
  }
"
`;

exports[`type: without context and with payload 1`] = `
"type without_context_and_with_payload =
  (opts: {
    payload: {
      data1: string
      data2: 123
    }
  }) => {
    type: 'stait1'
    actions: {
      action1: any
    }
  }
"
`;

exports[`type: without context and without payload 1`] = `
"type without_context_and_without_payload =
  () => {
    type: 'stait1'
    actions: {
      action1: any
    }
  }
"
`;
